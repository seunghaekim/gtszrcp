# Generated by Django 3.0.3 on 2020-02-07 14:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('photo', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_eng', models.CharField(max_length=200)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('createtime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bookshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_eng', models.CharField(max_length=200)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, default='Korea', max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('createtime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_eng', models.CharField(max_length=200)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('createtime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('subtitle', models.CharField(blank=True, max_length=500)),
                ('language', models.CharField(default='Korean', max_length=100)),
                ('publisher_place', models.CharField(default='Seoul', max_length=100)),
                ('medium', models.CharField(max_length=100)),
                ('page_amt', models.IntegerField(default=1, null=True)),
                ('binding_type', models.CharField(blank=True, max_length=100, null=True)),
                ('pub_date', models.DateField()),
                ('colorspace', models.CharField(choices=[('CMYK', 'CMYK'), ('RGB', 'RGB'), ('GRAY', 'Grayscale'), ('BNW', 'Black And White')], max_length=100)),
                ('price', models.FloatField(default=1, null=True)),
                ('slug', models.SlugField(max_length=20, unique=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('figs', models.TextField(blank=True, null=True)),
                ('toc', models.TextField(blank=True, null=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('designer', models.ManyToManyField(blank=True, default=None, related_name='artist_as_designer', to='bibliography.Artist')),
                ('distributor', models.ManyToManyField(blank=True, related_name='publisher_as_distributor', to='bibliography.Bookshop')),
                ('editor', models.ManyToManyField(blank=True, related_name='artist_as_editor', to='bibliography.Artist')),
                ('images', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='photo.Gallery')),
                ('publisher', models.ManyToManyField(default=None, to='bibliography.Publisher')),
                ('translator', models.ManyToManyField(blank=True, default=None, related_name='artist_as_translator', to='bibliography.Artist')),
                ('writer', models.ManyToManyField(blank=True, default=None, related_name='artist_as_writer', to='bibliography.Artist')),
            ],
            options={
                'ordering': ('-pub_date',),
            },
        ),
    ]
